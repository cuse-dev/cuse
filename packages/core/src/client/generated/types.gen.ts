// This file is auto-generated by @hey-api/openapi-ts

export type HTTPError = {
    detail?: string;
};

/**
 * Display number to operate on, defaults to 1.
 */
export type ParameterDisplayNumber = number;

export type EditorViewFileData = {
    body: {
        /**
         * Path to the file to be viewed.
         */
        path: string;
        /**
         * Start and end lines (inclusive).
         */
        view_range?: [
            number,
            number
        ];
    };
};

export type EditorViewFileResponse = (string);

export type EditorViewFileError = (unknown | HTTPError);

export type EditorCreateFileData = {
    body: {
        /**
         * Path to the file to be created.
         */
        path: string;
        /**
         * Optional content to place in the file.
         */
        file_text?: string;
    };
};

export type EditorCreateFileResponse = (void);

export type EditorCreateFileError = (unknown | HTTPError);

export type EditorReplaceStringData = {
    body: {
        /**
         * Path to the file.
         */
        path: string;
        /**
         * String to replace.
         */
        old_str: string;
        /**
         * Replacement string.
         */
        new_str: string;
    };
};

export type EditorReplaceStringResponse = (void);

export type EditorReplaceStringError = (unknown | HTTPError);

export type EditorInsertTextData = {
    body: {
        /**
         * Path to the file.
         */
        path: string;
        /**
         * The text to insert.
         */
        text: string;
        /**
         * Line number at which to insert text.
         */
        insert_line?: number;
    };
};

export type EditorInsertTextResponse = (void);

export type EditorInsertTextError = (unknown | HTTPError);

export type ComputerTakeScreenshotData = {
    query?: {
        /**
         * Display number to operate on, defaults to 1.
         */
        display_num?: number;
    };
};

export type ComputerTakeScreenshotResponse = ((Blob | File));

export type ComputerTakeScreenshotError = (HTTPError);

export type ComputerPressKeyData = {
    body: {
        /**
         * Key to press.
         */
        key: string;
        /**
         * Display number on which to press the key.
         */
        display_num?: number;
    };
};

export type ComputerPressKeyResponse = (void);

export type ComputerPressKeyError = (HTTPError);

export type ComputerTypeTextData = {
    body: {
        /**
         * Text to type.
         */
        text: string;
        /**
         * Display number on which to type text.
         */
        display_num?: number;
        /**
         * Delay (in milliseconds) between typed characters.
         */
        typing_delay?: number;
        /**
         * Number of characters typed between delays.
         */
        typing_group_size?: number;
    };
};

export type ComputerTypeTextResponse = (void);

export type ComputerTypeTextError = (HTTPError);

export type ComputerMoveCursorData = {
    body: {
        /**
         * X coordinate.
         */
        x: number;
        /**
         * Y coordinate.
         */
        y: number;
        /**
         * Display number on which to move the mouse.
         */
        display_num?: number;
    };
};

export type ComputerMoveCursorResponse = (void);

export type ComputerMoveCursorError = (HTTPError);

export type ComputerLeftClickData = {
    body?: {
        /**
         * Display number on which to perform the click.
         */
        display_num?: number;
    };
};

export type ComputerLeftClickResponse = (void);

export type ComputerLeftClickError = (HTTPError);

export type ComputerRightClickData = {
    body?: {
        /**
         * Display number on which to perform the click.
         */
        display_num?: number;
    };
};

export type ComputerRightClickResponse = (void);

export type ComputerRightClickError = (HTTPError);

export type ComputerMiddleClickData = {
    body?: {
        /**
         * Display number on which to perform the click.
         */
        display_num?: number;
    };
};

export type ComputerMiddleClickResponse = (void);

export type ComputerMiddleClickError = (HTTPError);

export type ComputerDoubleClickData = {
    body?: {
        /**
         * Display number on which to perform the double click.
         */
        display_num?: number;
    };
};

export type ComputerDoubleClickResponse = (void);

export type ComputerDoubleClickError = (HTTPError);

export type ComputerGetCursorPositionData = {
    query?: {
        /**
         * Display number to get the cursor position from.
         */
        display_num?: number;
    };
};

export type ComputerGetCursorPositionResponse = ({
    x?: number;
    y?: number;
});

export type ComputerGetCursorPositionError = (HTTPError);

export type BashExecuteCommandData = {
    body: {
        /**
         * Bash command to execute.
         */
        command: string;
    };
};

export type BashExecuteCommandResponse = (string);

export type BashExecuteCommandError = (HTTPError);